akka {
  stdout-loglevel = "OFF"
  loglevel = "DEBUG"
  use-slf4j = on

  coordinated-shutdown {
    exit-jvm = on
    terminate-actor-system = on
    run-by-actor-system-terminate = on
    run-by-jvm-shutdown-hook = on
  }

  actor {
    provider = cluster
    warn-about-java-serializer-usage = on
    allow-java-serialization = on

    serializers {
      agreement-added = "it.pagopa.interop.agreementmanagement.model.persistence.serializer.AgreementAddedSerializer"
      verified-attribute-updated = "it.pagopa.interop.agreementmanagement.model.persistence.serializer.VerifiedAttributeUpdatedSerializer"
      agreement-deleted = "it.pagopa.interop.agreementmanagement.model.persistence.serializer.AgreementDeletedSerializer"
      agreement-updated = "it.pagopa.interop.agreementmanagement.model.persistence.serializer.AgreementUpdatedSerializer"
      agreement-consumer-document-added = "it.pagopa.interop.agreementmanagement.model.persistence.serializer.AgreementConsumerDocumentAddedSerializer"
      agreement-consumer-document-removed = "it.pagopa.interop.agreementmanagement.model.persistence.serializer.AgreementConsumerDocumentRemovedSerializer"
      agreement-contract-added = "it.pagopa.interop.agreementmanagement.model.persistence.serializer.AgreementContractAddedSerializer"
      state = "it.pagopa.interop.agreementmanagement.model.persistence.serializer.StateSerializer"

      # deprecated
      agreement-activated = "it.pagopa.interop.agreementmanagement.model.persistence.serializer.AgreementActivatedSerializer"
      agreement-suspended = "it.pagopa.interop.agreementmanagement.model.persistence.serializer.AgreementSuspendedSerializer"
      agreement-deactivated = "it.pagopa.interop.agreementmanagement.model.persistence.serializer.AgreementDeactivatedSerializer"
    }

    serialization-identifiers {
      "it.pagopa.interop.agreementmanagement.model.persistence.serializer.AgreementAddedSerializer" = 100000
      "it.pagopa.interop.agreementmanagement.model.persistence.serializer.VerifiedAttributeUpdatedSerializer" = 100001
      "it.pagopa.interop.agreementmanagement.model.persistence.serializer.AgreementActivatedSerializer" = 100002
      "it.pagopa.interop.agreementmanagement.model.persistence.serializer.AgreementSuspendedSerializer" = 100003
      "it.pagopa.interop.agreementmanagement.model.persistence.serializer.AgreementDeactivatedSerializer" = 100004
      "it.pagopa.interop.agreementmanagement.model.persistence.serializer.AgreementConsumerDocumentAddedSerializer" = 100005
      "it.pagopa.interop.agreementmanagement.model.persistence.serializer.AgreementConsumerDocumentRemovedSerializer" = 100006
      "it.pagopa.interop.agreementmanagement.model.persistence.serializer.AgreementUpdatedSerializer" = 100007
      "it.pagopa.interop.agreementmanagement.model.persistence.serializer.AgreementDeletedSerializer" = 100008
      "it.pagopa.interop.agreementmanagement.model.persistence.serializer.AgreementContractAddedSerializer" = 100009
      "it.pagopa.interop.agreementmanagement.model.persistence.serializer.StateSerializer" = 200000
      "java.io.serializable" = none
    }
  
    serialization-bindings {
      "it.pagopa.interop.agreementmanagement.model.persistence.AgreementAdded" = agreement-added
      "it.pagopa.interop.agreementmanagement.model.persistence.VerifiedAttributeUpdated" = verified-attribute-updated
      "it.pagopa.interop.agreementmanagement.model.persistence.AgreementUpdated" = agreement-updated
      "it.pagopa.interop.agreementmanagement.model.persistence.AgreementDeleted" = agreement-deleted
      "it.pagopa.interop.agreementmanagement.model.persistence.AgreementConsumerDocumentAdded" = agreement-consumer-document-added
      "it.pagopa.interop.agreementmanagement.model.persistence.AgreementConsumerDocumentRemoved" = agreement-consumer-document-removed
      "it.pagopa.interop.agreementmanagement.model.persistence.AgreementContractAdded" = agreement-contract-added
      "it.pagopa.interop.agreementmanagement.model.persistence.State" = state
      "it.pagopa.interop.agreementmanagement.model.persistence.AgreementActivated" = agreement-activated
      "it.pagopa.interop.agreementmanagement.model.persistence.AgreementSuspended" = agreement-suspended
      "it.pagopa.interop.agreementmanagement.model.persistence.AgreementDeactivated" = agreement-deactivated
    }
  }

  cluster {
    run-coordinated-shutdown-when-down = on
    shutdown-after-unsuccessful-join-seed-nodes = 60s
    sharding.number-of-shards = 60 //number of nodes * 10
    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
  }

  typed.stash-capacity = 200000

  management {
    http {
      bind-hostname = 0.0.0.0
      route-providers-read-only = false
    }
    cluster.bootstrap.contact-point-discovery {
      discovery-method = kubernetes-api
      required-contact-point-nr = ${?REQUIRED_CONTACT_POINT_NR}
    }
    health-checks {
      readiness-checks.ready = "it.pagopa.interop.agreementmanagement.server.impl.HealthCheck"
      liveness-checks.live = "it.pagopa.interop.agreementmanagement.server.impl.LiveCheck"
    }
  }
}

agreement-management {
  idle-timeout = 60 seconds
  number-of-events-before-snapshot = 1000
  persistence = "memory"
  port = 8088
}